<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="OpenFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/KSwM/yksDf8qLA3/KSwM/yksDP8qLQ3/KSwM/yos
        DP8pLQz/KS0M/yotDP8qLQz/KSwN/yksDf8pLQz/KSwN/yktDP8qLAz/SUwX/32SPP8qLQr/KSwM/yks
        DP8AAAAAAAAAAAAAAAAAAAD/AAAAAAAAAAAAAAAAAAAA/wAAAAApLA3/KSwN/yosDf8pLA3/KSwN/yos
        Df8pLA3/KSwN/yksDf8pLA3/KSwN/yotDf8pLA3/KSwN/yksDf8pLA3/KSwN/yotDP9AThj/fZs9/yst
        Cv8pLA3/KSwN/wAAAAAAAAAAAAAAAAAAAP8AAAAAAAAAAAAAAAAAAAD/AAAAACktDf8pLQ3/KS0N/ykt
        DP8pLA3/KS0N/yktDP8pLA3/KSwN/yksDf8pLQ3/Ki0N/yktDf8pLQ3/KSwN/yksDf8pLAz/KS0L/09e
        Jf9OVSP/KSwL/yktDf8pLQ3/AAAAAAAAAAAAAAAAAAAAAAAAAP8AAAAAAAAA/wAAAAAAAAAAKS0M/ykt
        Df8qLQ3/KSwM/yksDP8qLQ3/KSwM/yksDP8pLAz/KSwM/yktDP8qLQ3/KS0M/yksDf8pLAz/KSwM/yks
        DP8pLAz/KS0M/yotDP8pLA3/KS0M/yksDP8AAAAAAAAAAAAAAAAAAAAAAAAA/wAAAAAAAAD/AAAAAAAA
        AAApLQz/KS0M/yktDP8pLAz/KSwM/yktDf8pLAz/KSwM/yksDP8pLAz/KSwM/yotDf8pLAz/KSwM/yks
        DP8pLAz/KSwM/yksDP8pLAz/KSwM/yksDP8pLAz/KSwM/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAA
        AAAAAAAAAAAAACksDf8qLA3/Ki0N/yksDf8pLA3/Ki0N/yksDP8pLA3/KSwN/yksDf8pLA3/Ki0N/yks
        Df8pLA3/KSwN/yksDf8pLA3/KSwN/yksDf8pLA3/KSwN/yktDf8pLA3/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAD/AAAAAAAAAAAAAAAAAAAB/wAAAf8AAAH/AAAB/wAAAf8AAAH/AAAB/wAAAf8AAAH/AAAB/wAA
        Af8AAAH/AAAB/wAAADgAAAC4AAAAugAAAIgAAAH/AAAB/wAAAf8AAAA+AAABfwAAAX8AAAG+AAABgAAA
        Ab4AAAHdAAAB3QAAAesAAAHrAAAB9wAAAfc=
</value>
  </data>
</root>